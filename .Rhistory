head(agg)
agg2 = agg[c("day","SampleTime","TempF","Humidity","WindSpeedMPH")]
View(agg)
View(agg2)
install.packages("viridis")
library(viridis)
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()
g2
?  scale_fill_viridis()
?scale_fill_viridis()
View(data)
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(Humidity ~ TempF)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(Humidity)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(Humidity ~ .)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(Humidity ~ .)
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(Humidity ~ .)
g2
data_long <- reshape(df, varying = c("date", "year", "month","hours"),
idvar="days",
v.names = "value",
timevar = "Type",
times=c("TempF", "Humidity", "WindSpeedMPH"),
direction = "long")
# Reshed data
data_long <- reshape(df, varying = c("TempF", "Humidity", "WindSpeedMPH"),
idvar="days",
v.names = "value",
timevar = "Type",
times=c("TempF", "Humidity", "WindSpeedMPH"),
direction = "long")
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(~day)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(.~day)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(day)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(day~)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(~day)
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis() + facet_grid(~day[1:5])
g2
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
library(tibbletime)
library(dplyr)
library(lubridate)
data <-read.csv("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 7/ext_data.csv")
summary(data)
head(data)
data$SampleTime = as.POSIXct( strptime(x = as.character(data$SampleTime), format="%m/%d/%Y %H:%M"))
data$date = data$SampleTime
data = data %>% mutate(year = year(date),
month = month(date, label=T),
day = day(date),
hour =hour(date))
head(data)
### Plotting heat map
g1 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = TempF)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Temperature") +
guides(fill=guide_legend(title="Temperature in F"))
g1
install.packages("viridis")
install.packages("viridis")
#install.packages("viridis")
library(viridis)
?scale_fill_viridis()
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()
g2
# converting  months abbrivations to numbers
data$month = match(data$month,month.abb)
head(data)
agg = aggregate(data,
by = list(data$day),
FUN = mean)
head(agg)
agg2 = agg[c("day","SampleTime","TempF","Humidity","WindSpeedMPH")]
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()   + facet_grid(.~ Humidity, scales="free")
g2
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()   + facet_grid(.~ Humidity, scales="free_x")
g2
#### Facet
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()   + facet_grid(.~ day, scales="free_x")
g2
g3 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = WindSpeedMPH)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly WindSpeedMPH") +
guides(fill=guide_legend(title="WindSpeedMPH"))  +
scale_fill_viridis()
g3
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
library(tibbletime)
library(dplyr)
library(lubridate)
data <-read.csv("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 7/ext_data.csv")
summary(data)
head(data)
data$SampleTime = as.POSIXct( strptime(x = as.character(data$SampleTime), format="%m/%d/%Y %H:%M"))
data$date = data$SampleTime
data = data %>% mutate(year = year(date),
month = month(date, label=T),
day = day(date),
hour =hour(date))
head(data)
#install.packages("viridis")
library(viridis)
?scale_fill_viridis()
### Plotting heat map
g1 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = TempF)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Temperature") +
guides(fill=guide_legend(title="Temperature in F"))  +
scale_fill_viridis()
g1
g1
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()
g2
g3 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = WindSpeedMPH)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly WindSpeedMPH") +
guides(fill=guide_legend(title="WindSpeedMPH"))  +
scale_fill_viridis()
g3
plot_grid(g1,g2,g3, labels = "AUTO")
plot_grid(g1,g2,g3, labels = "AUTO")
# all 3 together
plot_grid(g1,g2,g3, labels = "AUTO")
#### Facet ###
g4 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()   + facet_grid(.~ day, scales="free_x")
g4
# converting  months abbreviations to numbers
data$month = match(data$month,month.abb)
head(data)
agg = aggregate(data,
by = list(data$day),
FUN = mean)
head(agg)
agg2 = agg[c("day","SampleTime","TempF","Humidity","WindSpeedMPH")]
View(agg2)
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
data <-read.csv("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/exam1part2/exam 1 dataset.csv",
na.strings = c("-"))
# Structure of data
str(data)
# Changing Column Names
colnames(data)
colnames(data)<- c("Sex", "Race", "Age", "Stage", "Rate Type", "Year", "Rate")
dat = subset(data,data$Sex ==c("Both Sexes"))
dat = subset(dat,dat$Race == "All Races (includes Hispanic)")
# Time Plot
ggplot(dat, aes(x=Year, y=Rate,color=Age)) + geom_line() +
xlab("Year") + ylab("Rate") +
ggtitle("Cancer Rate wrt Age Groups  \n All Races and Both Sexes over time")
data_wide <- dcast(dat, Year ~ Age, value.var="Rate")
colnames(data_wide)
#####################################################################################
# Plotting wide format data
#####################################################################################
# get() gets the value name of the variable. As my varibales has spaces I am not able
# to use it directly that's why i am using get()
ggplot(data_wide, aes(Year)) +
geom_line(aes(y = get("Ages < 20"), colour = "Ages < 20")) +
geom_line(aes(y = get("Ages < 50"), colour = "Ages < 50")) +
geom_line(aes(y = get("Ages <15") , colour ="Ages <15")) +
geom_line(aes(y = get("Ages 15-39"), colour = "Ages 15-39")) +
geom_line(aes(y = get('Ages 40-64'), colour ="Ages 40-64")) +
geom_line(aes(y = get("Ages 50-64") , colour ="Ages 50-64")) +
geom_line(aes(y = get("Ages 65-74"), colour ="Ages 65-74")) +
geom_line(aes(y = get("Ages 65+"), colour ="Ages 65+")) +
geom_line(aes(y = get("Ages 75+"), colour ="Ages 75+")) +
geom_line(aes(y = get("All Ages") , colour = "All Ages")) +
xlab("Year") + ylab("Rate") +
ggtitle("Cancer Rate wrt Age Groups  \n All Races and Both Sexes over time")
data_long_back = melt(data_wide, id.vars="Year" ,
variable.name="Age",
value.name="Rate")
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
library(tibbletime)
library(dplyr)
library(lubridate)
data <-read.csv("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 7/ext_data.csv")
summary(data)
head(data)
data$SampleTime = as.POSIXct( strptime(x = as.character(data$SampleTime), format="%m/%d/%Y %H:%M"))
data$date = data$SampleTime
data = data %>% mutate(year = year(date),
month = month(date, label=T),
day = day(date),
hour =hour(date))
head(data)
#install.packages("viridis")
library(viridis)
?scale_fill_viridis()
### Plotting heat map
g1 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = TempF)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Temperature") +
guides(fill=guide_legend(title="Temperature in F"))  +
scale_fill_viridis()
g1
g2 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()
g2
g3 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = WindSpeedMPH)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly WindSpeedMPH") +
guides(fill=guide_legend(title="WindSpeedMPH"))  +
scale_fill_viridis()
g3
# all 3 together
plot_grid(g1,g2,g3, labels = "AUTO")
#### Facet ###
g4 <- ggplot(data, aes(x = day,hour)) +
geom_tile(aes(fill = Humidity)) +
xlab("Day(s)") + ylab("Hour(s)") +
ggtitle("Hourly Humidity") +
guides(fill=guide_legend(title="Humidity"))  +
scale_fill_viridis()   + facet_grid(.~ day, scales="free_x")
g4
# converting  months abbreviations to numbers
data$month = match(data$month,month.abb)
head(data)
agg = aggregate(data,
by = list(data$day),
FUN = mean)
head(agg)
agg2 = agg[c("day","SampleTime","TempF","Humidity","WindSpeedMPH")]
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
library(tibbletime)
library(dplyr)
library(lubridate)
data <-read.csv("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls")
data <- read.table("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls")
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
library(tibbletime)
library(dplyr)
library(lubridate)
data <- read.table("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls")
summary(data)
head(data)
data
data <- read.xlsx("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls")
data <- read.xlsx("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls",sheetIndex = 1)
summary(data)
head(data)
data
data <- read.xlsx("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls",
sheetIndex = 1,
rowIndex = 2:15, colIndex = 4:7)
summary(data)
head(data)
data
data <- read.xlsx("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls",
sheetIndex = 1,
rowIndex = 2:15, colIndex = 4:7)
summary(data)
data <- read.xlsx("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls",
sheetIndex = 1,
rowIndex =4:7 , colIndex = 2:15)
summary(data)
head(data)
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
data <-read.csv("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/exam1part2/exam 1 dataset.csv",
na.strings = c("-"))
# Structure of data
str(data)
# Changing Column Names
colnames(data)
colnames(data)<- c("Sex", "Race", "Age", "Stage", "Rate Type", "Year", "Rate")
dat = subset(data,data$Sex ==c("Both Sexes"))
dat = subset(dat,dat$Race == "All Races (includes Hispanic)")
dat
# Time Plot
ggplot(dat, aes(x=Year, y=Rate,color=Age)) + geom_line() +
xlab("Year") + ylab("Rate") +
ggtitle("Cancer Rate wrt Age Groups  \n All Races and Both Sexes over time")
data_wide <- dcast(dat, Year ~ Age, value.var="Rate")
colnames(data_wide)
data_wide
#####################################################################################
# Plotting wide format data
#####################################################################################
# get() gets the value name of the variable. As my varibales has spaces I am not able
# to use it directly that's why i am using get()
ggplot(data_wide, aes(Year)) +
geom_line(aes(y = get("Ages < 20"), colour = "Ages < 20")) +
geom_line(aes(y = get("Ages < 50"), colour = "Ages < 50")) +
geom_line(aes(y = get("Ages <15") , colour ="Ages <15")) +
geom_line(aes(y = get("Ages 15-39"), colour = "Ages 15-39")) +
geom_line(aes(y = get('Ages 40-64'), colour ="Ages 40-64")) +
geom_line(aes(y = get("Ages 50-64") , colour ="Ages 50-64")) +
geom_line(aes(y = get("Ages 65-74"), colour ="Ages 65-74")) +
geom_line(aes(y = get("Ages 65+"), colour ="Ages 65+")) +
geom_line(aes(y = get("Ages 75+"), colour ="Ages 75+")) +
geom_line(aes(y = get("All Ages") , colour = "All Ages")) +
xlab("Year") + ylab("Rate") +
ggtitle("Cancer Rate wrt Age Groups  \n All Races and Both Sexes over time")
data_long_back = melt(data_wide, id.vars="Year" ,
variable.name="Age",
value.name="Rate")
View(data)
data <- read.xlsx("C:/Users/Malik/Documents/GitHub/Data-Visualization-Data502/Home Works/HW 9/Copy of Dynamic Baseline Stacked Column Chart Excel.xls",
sheetIndex = 1,
rowIndex =4:7 , colIndex = 2:15)
View(data)
reshape2::melt(data, id.vars=c("Index","Region"),
variable.names="Months",
value.name="Value")
datal= reshape2::melt(data, id.vars=c("Index","Region"),
variable.names="Months",
value.name="Value")
datal
head(data)
head(datal)
datal= reshape2::melt(data, id.vars=c("Index","Region"),
variable.names="Months",
value.name="Value")
head(datal)
datal= reshape2::melt(data, id.vars=c("Index","Region"),
variable.name="Months",
value.name="Value")
head(datal)
ggplot(datal, aes(x=Region,y=value,fill=month)) + geom_bar(stat = "idenitiy")
ggplot(datal, aes(x=Region,y=value,fill=month)) + geom_bar(stat = "id")
ggplot(datal, aes(x=Region,y=value,fill=month)) + geom_bar()
ggplot(datal, aes(x=Region,y=value,fill=month)) + geom_bar()
ggplot(datal, aes(x=Region,y=Value,fill=month)) + geom_bar()
library(cowplot)
library(ggplot2)
library(scales)
library(reshape2)
library(xlsx)
library(tibbletime)
library(dplyr)
library(lubridate)
ggplot(datal, aes(x=Region,y=Value,fill=month)) + geom_bar(stat = "identity")
ggplot(datal, aes(x=Region,y=Value,fill=Months)) + geom_bar(stat = "identity")
ggplot(datal, aes(x=Months,y=Value,fill=Region)) + geom_bar(stat = "identity")
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") +
facet_grid(~Region)
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text((angle=45)))
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text((angle=45))) +
facet_grid(~Region)
geom_bar(stat = "identity") + theme(axis.text.x = element_text((angle=45)) +
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle=45))+
facet_grid(~Region)
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle=45)) +
facet_grid(~Region)
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle=45)) +
facet_grid(~Region)
library(plotly)
install.packages("plotly")
p91 = ggplot(datal, aes(x=Months,y=Value,fill=Region)) + geom_bar(stat = "identity")
library(plotly)
ggplotly(p91)
install.packages("trelliscopejs")
library(plotly)
library(trelliscopejs)
ggplot(datal, aes(x=Months,y=Value,fill=Region)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle=45)) +
scale_fill_brewer(palette = "Paired")+
facet_trelliscope(~Region,nrow = 1,ncol = 3)
